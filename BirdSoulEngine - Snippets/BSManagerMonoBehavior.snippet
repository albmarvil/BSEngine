<?xml version="1.0" encoding="utf-8" ?>

<CodeSnippet Format="1.0.0" xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <Header>
    <Title>BSManager for MonoBehavior</Title>
    <Author>Alberto Martínez Villarán</Author>
    <Shortcut>BSManager_Mono</Shortcut>
    <Description>
      Adds a code region with the definiton of the singleton for a
      class that is driven by MonoBehaviour.
    </Description>
    <SnippetTypes>
      <SnippetType>Expansion</SnippetType>
    </SnippetTypes>
  </Header>
  <Snippet>
    <Declarations>
      <Literal>
        <ID>ClassName</ID>
        <Default>ClassName</Default>
      </Literal>
    </Declarations>
    <Code Language="CSharp">
      <![CDATA[    
    #region Singleton

    /// <summary>
    /// Singleton instance of the class
    /// </summary>
    private static $ClassName$ m_instance = null;

    /// <summary>
    /// Property to get the singleton instance of the class.
    /// </summary>
    public static $ClassName$ Singleton { get { return m_instance; } }

    // Explicit static constructor to tell C# compiler not to mark type as beforefieldinit
    static $ClassName$() { }

    /// <summary>
    /// This is like the Init but done by the MonoBehaviour
    /// </summary>
    private void Awake()
    {
        if (m_instance == null)
            m_instance = this;
        else
        {
            Debug.LogError("Someone is trying to create various $ClassName$ [" + name + "]");
            this.enabled = false;
        }
    }
	
	/// <summary>
    /// This is like the Release but done by the MonoBehaviour
    /// </summary>
    private void OnDestroy()
    {
        if (m_instance == this)
            m_instance = null;
    }

    #endregion
]]>
    </Code>
  </Snippet>
</CodeSnippet>
